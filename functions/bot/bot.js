const { Telegraf } = require('telegraf');
const { parse } = require('node-html-parser');
const { message } = require('telegraf/filters');
const axios = require('axios');
const textCommand = require('../../consts')
require('dotenv').config();


const bot = new Telegraf(process.env.BOT_TOKEN);
bot.start((ctx) => ctx.replyWithHTML(`<b> –ó–¥—Ä–∞–≤c—Ç–≤—É–π—Ç–µ ${ctx.message.from.first_name ? ctx.message.from.first_name : ''}, —è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ë–æ—Ç –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –ì–æ–º–µ–ª—å—Å–∫–∏–π –¶–°–ú–°, —è –º–æ–≥—É –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å –í–∞–º –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –í–∞—à–µ–π –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏-—Å—á—ë—Ç –ø–æ –µ—ë –Ω–æ–º–µ—Ä—É  
‚ùóÔ∏è –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏-—Å—á—ë—Ç H–ï –∏—Å–ø–æ–ª—å–∑—É—è —Å–∏–º–≤–æ–ª '-' 
‚ùóÔ∏è –ü—Ä–∏–º–µ—Ä 2160011111
</b>`));


bot.on('message', async (ctx) => {
    try {
        const bill = ctx.message.text
        if (bill.length !== 10) {
            ctx.reply(`–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö üòî`)
        } else {
            const url = `https://www.gomelcsms.by/info/scheta.php?nom=${bill}&god=2023`
            const res = await axios.get(url)
            const notFoundBill = res.data.includes('–Ω–µ—Ç –≤ –±–∞–∑–µ')
            const parsed = parse(res.data)
            const text = parsed.querySelectorAll("div[align='center'] font[color='green']").map((e) => e.text).join('')
            const errorText = parsed.querySelectorAll("div[align='center'] font[color='red']").map((e) => e.text).join('')
            await ctx.reply(`${text} üëç`)
            errorText && await ctx.reply(`${errorText} üòî –Ω–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –¥–µ–ª–∞—é—Ç –≤—Å—ë –≤–æ–∑–º–æ–∂–Ω–æ–µ –¥–ª—è —Å–∫–æ—Ä–µ–π—à–µ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç üëå`)
            notFoundBill && await ctx.reply('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö üòî')  
        }
    } catch (e) {
        console.error(e)
        e && await ctx.reply('–ò–∑–≤–∏–Ω–∏—Ç–µ, –∫–∞–∫–∏–µ-—Ç–æ –Ω–µ–ø–æ–ª–∞–¥–∫–∏, –æ—Ç–ø—Ä–≤—å—Ç–µ –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ')
    }
})




// bot.on(message('sticker'), (ctx) => ctx.reply('üëç'));
// bot.hears('hi', (ctx) => ctx.reply('Hey there'));
bot.launch();

// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));

